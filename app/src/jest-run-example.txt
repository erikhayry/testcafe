  ✕ should have alt tag (139 ms)
  ✕ should have correct heading order (62 ms)
  ✕ should have unique landmarks (34 ms)
  ✕ should have form element labels (40 ms)
  ✕ should not have tab index greater than 0 (35 ms)
  ✕ should button name (24 ms)

  ● should have alt tag

    expect(received).toHaveNoViolations(expected)

    Expected the HTML found at $('img') to have no violations:

    <img src="logo.svg">

    Received:

    "Images must have alternate text (image-alt)"

    Fix any of the following:
      Element does not have an alt attribute
      aria-label attribute does not exist or is empty
      aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty
      Element has no title attribute
      Element's default semantics were not overridden with role="none" or role="presentation"

    You can find more information on this issue here:
    https://dequeuniversity.com/rules/axe/4.5/image-alt?application=axeAPI

       9 |   const results = await axe(container)
      10 |
    > 11 |   expect(results).toHaveNoViolations()
         |                   ^
      12 | })
      13 |
      14 | it('should have correct heading order', async () => {

      at Object.<anonymous> (src/App.test.js:11:19)

  ● should have correct heading order

    expect(received).toHaveNoViolations(expected)

    Expected the HTML found at $('h3') to have no violations:

    <h3>Heading 3</h3>

    Received:

    "Heading levels should only increase by one (heading-order)"

    Fix any of the following:
      Heading order invalid

    You can find more information on this issue here:
    https://dequeuniversity.com/rules/axe/4.5/heading-order?application=axeAPI

      19 |   const results = await axe(container)
      20 |
    > 21 |   expect(results).toHaveNoViolations()
         |                   ^
      22 | })
      23 |
      24 | it('should have unique landmarks', async () => {

      at Object.<anonymous> (src/App.test.js:21:19)

  ● should have unique landmarks

    expect(received).toHaveNoViolations(expected)

    Expected the HTML found at $('nav:nth-child(1)') to have no violations:

    <nav>Nav 1</nav>

    Received:

    "Ensures landmarks are unique (landmark-unique)"

    Fix any of the following:
      The landmark must have a unique aria-label, aria-labelledby, or title to make landmarks distinguishable

    You can find more information on this issue here:
    https://dequeuniversity.com/rules/axe/4.5/landmark-unique?application=axeAPI

      29 |   const results = await axe(container)
      30 |
    > 31 |   expect(results).toHaveNoViolations()
         |                   ^
      32 | })
      33 |
      34 | it('should have form element labels', async () => {

      at Object.<anonymous> (src/App.test.js:31:19)

  ● should have form element labels

    expect(received).toHaveNoViolations(expected)

    Expected the HTML found at $('input') to have no violations:

    <input type="text">

    Received:

    "Form elements must have labels (label)"

    Fix any of the following:
      Form element does not have an implicit (wrapped) <label>
      Form element does not have an explicit <label>
      aria-label attribute does not exist or is empty
      aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty
      Element has no title attribute
      Element has no placeholder attribute
      Element's default semantics were not overridden with role="none" or role="presentation"

    You can find more information on this issue here:
    https://dequeuniversity.com/rules/axe/4.5/label?application=axeAPI

      36 |   const results = await axe(container)
      37 |
    > 38 |   expect(results).toHaveNoViolations()
         |                   ^
      39 | })
      40 |
      41 | it('should not have tab index greater than 0', async () => {

      at Object.<anonymous> (src/App.test.js:38:19)

  ● should not have tab index greater than 0

    expect(received).toHaveNoViolations(expected)

    Expected the HTML found at $('button') to have no violations:

    <button tabindex="1">Click me</button>

    Received:

    "Elements should not have tabindex greater than zero (tabindex)"

    Fix any of the following:
      Element has a tabindex greater than 0

    You can find more information on this issue here:
    https://dequeuniversity.com/rules/axe/4.5/tabindex?application=axeAPI

      43 |   const results = await axe(container)
      44 |
    > 45 |   expect(results).toHaveNoViolations()
         |                   ^
      46 | })
      47 |
      48 | it('should button name', async () => {

      at Object.<anonymous> (src/App.test.js:45:19)

  ● should button name

    expect(received).toHaveNoViolations(expected)

    Expected the HTML found at $('button') to have no violations:

    <button></button>

    Received:

    "Buttons must have discernible text (button-name)"

    Fix any of the following:
      Element does not have inner text that is visible to screen readers
      aria-label attribute does not exist or is empty
      aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty
      Element has no title attribute
      Element's default semantics were not overridden with role="none" or role="presentation"

    You can find more information on this issue here:
    https://dequeuniversity.com/rules/axe/4.5/button-name?application=axeAPI

      50 |   const results = await axe(container)
      51 |
    > 52 |   expect(results).toHaveNoViolations()
         |                   ^
      53 | })

      at Object.<anonymous> (src/App.test.js:52:19)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 6 total
Snapshots:   0 total
Time:        1.373 s
Ran all test suites.
